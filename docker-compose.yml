version: "3.9"
networks:
  web:
    external: false
services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/dynamic
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.dashboard=true
      - --api=true
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik/letsencrypt:/letsencrypt
      - ./data/traefik/dynamic:/dynamic:ro
    networks: [web]
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST}`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=le
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=dashboard-auth@file
  postgres:
    image: postgres:16-alpine
    container_name: pg-shared
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${PG_SUPERUSER_PASSWORD}
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
      # - ./data/postgres/init:/docker-entrypoint-initdb.d:ro
    networks: [web]
  n8n:
    build:
      context: ./n8n
      dockerfile: Dockerfile
    container_name: n8n
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://${N8N_HOST}/
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_SECURE_COOKIE=true
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME}
      - DB_POSTGRESDB_USER=${N8N_DB_USER}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      - NODE_FUNCTION_ALLOW_EXTERNAL=*
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_LOG_LEVEL=info
      - N8N_RUNNERS_ENABLED=true
    volumes:
      - n8n_data:/home/node/.n8n
      - n8n_files:/files
    networks: [web]
    depends_on:
      - postgres
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${N8N_HOST}`)
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.tls.certresolver=le
      - traefik.http.services.n8n.loadbalancer.server.port=5678
  metamcp:
    image: ghcr.io/metatool-ai/metamcp:2.4.13
    container_name: metamcp
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - APP_URL=https://${MCP_HOST}
      - NEXT_PUBLIC_APP_URL=https://${MCP_HOST}
      - DATABASE_URL=postgresql://${METAMCP_DB_USER}:${METAMCP_DB_PASSWORD}@postgres:5432/${METAMCP_DB_NAME}
      - BETTER_AUTH_SECRET=${METAMCP_BETTER_AUTH_SECRET}
      - ENCRYPTION_KEY=${METAMCP_ENCRYPTION_KEY}
      - PORT=12008
    networks: [web]
    labels:
      - traefik.enable=true
      - traefik.http.routers.mcp.rule=Host(`${MCP_HOST}`)
      - traefik.http.routers.mcp.entrypoints=websecure
      - traefik.http.routers.mcp.tls.certresolver=le
      - traefik.http.services.mcp.loadbalancer.server.port=12008
      - traefik.http.services.mcp.loadbalancer.serverstransport=sse@file
      - traefik.http.routers.mcp.middlewares=mcp-cors@file
volumes:
  n8n_data:
  n8n_files:
